openapi: "3.0.0"
info:
  title: "Library API"
  description: "API documentation for managing library data"
  version: "1.0.0"
servers:
  - url: "http://localhost:8080"
paths:
  /:
    get:
      summary: "Homepage"
      responses:
        '200':
          description: "Homepage"
  /info:
    get:
      summary: "Info page"
      responses:
        '200':
          description: "Info page"
  /authors:
    get:
      summary: "Get all authors"
      responses:
        '200':
          description: "List of authors"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                    lastname:
                      type: "string"
                    firstname:
                      type: "string"
                    photo:
                      type: "string"
  /authorsbooks:
    get:
      summary: "Get authors and their books"
      responses:
        '200':
          description: "List of authors and their books"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    author_firstname:
                      type: "string"
                    author_lastname:
                      type: "string"
                    book_title:
                      type: "string"
                    book_photo:
                      type: "string"
  /authors/{id}:
    get:
      summary: "Get author and their books by ID"
      parameters:
        - name: id
          in: path
          description: "Author ID"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Author and their books"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  author_firstname:
                    type: "string"
                  author_lastname:
                    type: "string"
                  author_photo:
                    type: "string"
                  books:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        book_title:
                          type: "string"
                        book_photo:
                          type: "string"
  /books:
    get:
      summary: "Get book by ID"
      parameters:
        - name: book_id
          in: query
          description: "Book ID"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Book details"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  book_title:
                    type: "string"
                  author_id:
                    type: "integer"
                  book_photo:
                    type: "string"
                  is_borrowed:
                    type: "boolean"
                  book_id:
                    type: "integer"
                  book_details:
                    type: "string"
                  author_lastname:
                    type: "string"
                  author_firstname:
                    type: "string"
  /subscribers_by_book:
    get:
      summary: "Get subscribers by book ID"
      parameters:
        - name: book_id
          in: query
          description: "Book ID"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "List of subscribers"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      type: "integer"
                    lastname:
                      type: "string"
                    firstname:
                      type: "string"
                    email:
                      type: "string"
  /authors/new:
    post:
      summary: "Add a new author"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                lastname:
                  type: "string"
                firstname:
                  type: "string"
                photo:
                  type: "string"
      responses:
        '200':
          description: "ID of the new author"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "integer"
  /books/new:
    post:
      summary: "Add a new book"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title:
                  type: "string"
                author_id:
                  type: "integer"
                photo:
                  type: "string"
                details:
                  type: "string"
      responses:
        '200':
          description: "ID of the new book"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "integer"
  /book/borrow:
    post:
      summary: "Borrow a book"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                subscriber_id:
                  type: "integer"
                book_id:
                  type: "integer"
      responses:
        '201':
          description: "Book borrowed successfully"
  /book/return:
    post:
      summary: "Return a borrowed book"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                subscriber_id:
                  type: "integer"
                book_id:
                  type: "integer"
      responses:
        '200':
          description: "Book returned successfully"
  /authors/update/{id}:
    put:
      summary: "Update an existing author"
      parameters:
        - name: id
          in: path
          description: "Author ID"
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                lastname:
                  type: "string"
                firstname:
                  type: "string"
                photo:
                  type: "string"
      responses:
        '200':
          description: "Author updated successfully"
  /books/{id}:
    put:
      summary: "Update an existing book"
      parameters:
        - name: id
          in: path
          description: "Book ID"
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title:
                  type: "string"
                author_id:
                  type: "integer"
                photo:
                  type: "string"
                details:
                  type: "string"
      responses:
        '200':
          description: "Book updated successfully"
  /authors/delete/{id}:
    delete:
      summary: "Delete an existing author"
      parameters:
        - name: id
          in: path
          description: "Author ID"
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Author deleted successfully"
