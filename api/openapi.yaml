openapi: 3.0.0
info:
  title: Library Management System API
  description: API for managing books, authors, and subscribers in a library
  version: 1.0.0

servers:
  - url: http://localhost:8081

paths:
  /books:
    get:
      summary: Get all books
      responses:
        '200':
          description: Successful response
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookAuthorInfo'

  /authors:
    get:
      summary: Get all authors
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

  /authorsbooks:
    get:
      summary: Get all authors and their books
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorBook'

  /authors/{id}:
    get:
      summary: Get books by author ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorWithBooks'

  /books/{id}:
    get:
      summary: Get book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookAuthorInfo'

  /subscribers/{id}:
    get:
      summary: Get subscribers by book ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'

  /subscribers:
    get:
      summary: Get all subscribers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'

  /book/borrow:
    post:
      summary: Borrow a book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriber_id:
                  type: integer
                book_id:
                  type: integer
      responses:
        '201':
          description: Book borrowed successfully

  /book/return:
    post:
      summary: Return a borrowed book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriber_id:
                  type: integer
                book_id:
                  type: integer
      responses:
        '200':
          description: Book returned successfully

  /authors/new:
    post:
      summary: Add a new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: Author added successfully

  /author/photo/{id}:
    post:
      summary: Add author photo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Photo uploaded successfully

  /books/new:
    post:
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBook'
      responses:
        '201':
          description: Book added successfully

  /subscribers/new:
    post:
      summary: Add a new subscriber
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscriber'
      responses:
        '201':
          description: Subscriber added successfully

  /search_books:
    get:
      summary: Search books
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookAuthorInfo'

  /search_authors:
    get:
      summary: Search authors
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorInfo'

  /signup:
    post:
      summary: User signup
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully

  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful

components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
        lastname:
          type: string
        firstname:
          type: string
        photo:
          type: string

    AuthorInfo:
      type: object
      properties:
        id:
          type: integer
        firstname:
          type: string
        lastname:
          type: string
        photo:
          type: string

    BookAuthorInfo:
      type: object
      properties:
        book_id:
          type: integer
        book_title:
          type: string
        author_id:
          type: integer
        book_photo:
          type: string
        is_borrowed:
          type: boolean
        book_details:
          type: string
        author_lastname:
          type: string
        author_firstname:
          type: string

    AuthorBook:
      type: object
      properties:
        author_firstname:
          type: string
        author_lastname:
          type: string
        book_title:
          type: string
        book_photo:
          type: string

    Subscriber:
      type: object
      properties:
        lastname:
          type: string
        firstname:
          type: string
        email:
          type: string

    NewBook:
      type: object
      properties:
        title:
          type: string
        author_id:
          type: integer
        photo:
          type: string
        is_borrowed:
          type: boolean
        details:
          type: string

    AuthorWithBooks:
      type: object
      properties:
        author_firstname:
          type: string
        author_lastname:
          type: string
        author_photo:
          type: string
        books:
          type: array
          items:
            $ref: '#/components/schemas/AuthorBook'